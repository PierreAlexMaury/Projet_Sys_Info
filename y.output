State 13 conflicts: 2 shift/reduce
State 19 conflicts: 2 shift/reduce
State 23 conflicts: 1 shift/reduce
State 26 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 138 conflicts: 1 shift/reduce
State 157 conflicts: 1 shift/reduce


Grammar

    0 $accept: Start $end

    1 Start: Fonctions Raz Main

    2 Fonctions: CreerTable Fonction Fonctions
    3          | /* empty */

    4 Raz: /* empty */

    5 CreerTable: /* empty */

    6 Fonction: tINT NommerFonction tOPAR ArgumentFonction tCPAR Block FinDeFonction

    7 FinDeFonction: /* empty */

    8 ArgumentFonction: tCONST tINT tVAR
    9                 | tINT tVAR
   10                 | /* empty */

   11 NommerFonction: tVAR

   12 Main: tMAIN Block

   13 Block: tOBRACKET Declarations Instructions tCBRACKET

   14 Declarations: Declaration Declarations
   15             | /* empty */

   16 Declaration: tCONST tINT tVAR tSEMICOLON
   17            | tINT tVAR tSEMICOLON
   18            | tCONST tINT AssignmentConst tSEMICOLON
   19            | tINT AssignmentInt tSEMICOLON

   20 AssignmentInt: tVAR tVIR AssignmentInt
   21              | tVAR tEQ tVAR tVIR AssignmentInt
   22              | tVAR tEQ tLESS tVAR tVIR AssignmentInt
   23              | tVAR tEQ tVAR
   24              | tVAR tEQ tLESS tVAR
   25              | tVAR tEQ tNUM tVIR AssignmentInt
   26              | tVAR tEQ tLESS tNUM tVIR AssignmentInt
   27              | tVAR tEQ tNUM
   28              | tVAR tEQ tLESS tNUM
   29              | tVAR tEQ tEXPO tVIR AssignmentInt
   30              | tVAR tEQ tLESS tEXPO tVIR AssignmentInt
   31              | tVAR tEQ tEXPO
   32              | tVAR tEQ tLESS tEXPO
   33              | tVAR

   34 AssignmentConst: tVAR tVIR AssignmentConst
   35                | tVAR tEQ tVAR tVIR AssignmentConst
   36                | tVAR tEQ tLESS tVAR tVIR AssignmentConst
   37                | tVAR tEQ tVAR
   38                | tVAR tEQ tLESS tVAR
   39                | tVAR tEQ tNUM tVIR AssignmentConst
   40                | tVAR tEQ tLESS tNUM tVIR AssignmentConst
   41                | tVAR tEQ tNUM
   42                | tVAR tEQ tLESS tNUM
   43                | tVAR tEQ tEXPO tVIR AssignmentConst
   44                | tVAR tEQ tLESS tEXPO tVIR AssignmentConst
   45                | tVAR tEQ tEXPO
   46                | tVAR tEQ tLESS tEXPO
   47                | tVAR

   48 Instructions: Instruction Instructions
   49             | /* empty */

   50 Instruction: Operation tSEMICOLON
   51            | Statement

   52 Operation: tOPAR Operation tCPAR
   53          | Operation tPLUS Operation
   54          | Operation tLESS Operation
   55          | Operation tMUL Operation
   56          | Operation tDIV Operation
   57          | tVAR tEQ Operation
   58          | tLESS Operation
   59          | tNUM
   60          | tVAR
   61          | tEXPO
   62          | AppelFonction

   63 Statement: While
   64          | BIfElse
   65          | Printf
   66          | Declaration
   67          | Return
   68          | tSEMICOLON

   69 Return: tRETURN Operation

   70 AppelFonction: tVAR tOPAR tCPAR
   71              | tVAR tOPAR Operation tCPAR

   72 While: tWHILE Nsautw tOPAR Condition tCPAR Instruction
   73      | tWHILE Nsautw tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET

   74 BIfElse: tIF tOPAR Condition tCPAR Instruction tELSE Nsaut Instruction
   75        | tIF tOPAR Condition tCPAR Instruction
   76        | tIF tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET tELSE Nsaut Instruction
   77        | tIF tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET
   78        | tIF tOPAR Condition tCPAR Instruction tELSE Nsaut tOBRACKET Instructions tCBRACKET
   79        | tIF tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET tELSE Nsaut tOBRACKET Instructions tCBRACKET

   80 Nsautw: /* empty */

   81 Nsaut: /* empty */

   82 Condition: Operation tEQUAL Operation
   83          | Operation tNE Operation
   84          | Operation tLE Operation
   85          | Operation tLT Operation
   86          | Operation tGE Operation
   87          | Operation tGT Operation
   88          | Operation

   89 Printf: tPRINTF tOPAR Operation tCPAR tSEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
tLE (258) 84
tLT (259) 85
tGE (260) 86
tGT (261) 87
tNE (262) 83
tEQUAL (263) 82
tVAR (264) 8 9 11 16 17 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
    35 36 37 38 39 40 41 42 43 44 45 46 47 57 60 70 71
tNUM (265) 25 26 27 28 39 40 41 42 59
tEXPO (266) 29 30 31 32 43 44 45 46 61
tOPAR (267) 6 52 70 71 72 73 74 75 76 77 78 79 89
tCPAR (268) 6 52 70 71 72 73 74 75 76 77 78 79 89
tVIR (269) 20 21 22 25 26 29 30 34 35 36 39 40 43 44
tSEMICOLON (270) 16 17 18 19 50 68 89
tEQ (271) 21 22 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41
    42 43 44 45 46 57
tPLUS (272) 53
tLESS (273) 22 24 26 28 30 32 36 38 40 42 44 46 54 58
tMUL (274) 55
tDIV (275) 56
tWHILE (276) 72 73
tIF (277) 74 75 76 77 78 79
tELSE (278) 74 76 78 79
tPRINTF (279) 89
tOBRACKET (280) 13 73 76 77 78 79
tCBRACKET (281) 13 73 76 77 78 79
tINT (282) 6 8 9 16 17 18 19
tCONST (283) 8 16 18
tRETURN (284) 69
tMAIN (285) 12


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
Start (32)
    on left: 1, on right: 0
Fonctions (33)
    on left: 2 3, on right: 1 2
Raz (34)
    on left: 4, on right: 1
CreerTable (35)
    on left: 5, on right: 2
Fonction (36)
    on left: 6, on right: 2
FinDeFonction (37)
    on left: 7, on right: 6
ArgumentFonction (38)
    on left: 8 9 10, on right: 6
NommerFonction (39)
    on left: 11, on right: 6
Main (40)
    on left: 12, on right: 1
Block (41)
    on left: 13, on right: 6 12
Declarations (42)
    on left: 14 15, on right: 13 14
Declaration (43)
    on left: 16 17 18 19, on right: 14 66
AssignmentInt (44)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33,
    on right: 19 20 21 22 25 26 29 30
AssignmentConst (45)
    on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47,
    on right: 18 34 35 36 39 40 43 44
Instructions (46)
    on left: 48 49, on right: 13 48 73 76 77 78 79
Instruction (47)
    on left: 50 51, on right: 48 72 74 75 76 78
Operation (48)
    on left: 52 53 54 55 56 57 58 59 60 61 62, on right: 50 52 53 54
    55 56 57 58 69 71 82 83 84 85 86 87 88 89
Statement (49)
    on left: 63 64 65 66 67 68, on right: 51
Return (50)
    on left: 69, on right: 67
AppelFonction (51)
    on left: 70 71, on right: 62
While (52)
    on left: 72 73, on right: 63
BIfElse (53)
    on left: 74 75 76 77 78 79, on right: 64
Nsautw (54)
    on left: 80, on right: 72 73
Nsaut (55)
    on left: 81, on right: 74 76 78 79
Condition (56)
    on left: 82 83 84 85 86 87 88, on right: 72 73 74 75 76 77 78 79
Printf (57)
    on left: 89, on right: 65


state 0

    0 $accept: . Start $end

    tINT      reduce using rule 5 (CreerTable)
    $default  reduce using rule 3 (Fonctions)

    Start       go to state 1
    Fonctions   go to state 2
    CreerTable  go to state 3


state 1

    0 $accept: Start . $end

    $end  shift, and go to state 4


state 2

    1 Start: Fonctions . Raz Main

    $default  reduce using rule 4 (Raz)

    Raz  go to state 5


state 3

    2 Fonctions: CreerTable . Fonction Fonctions

    tINT  shift, and go to state 6

    Fonction  go to state 7


state 4

    0 $accept: Start $end .

    $default  accept


state 5

    1 Start: Fonctions Raz . Main

    tMAIN  shift, and go to state 8

    Main  go to state 9


state 6

    6 Fonction: tINT . NommerFonction tOPAR ArgumentFonction tCPAR Block FinDeFonction

    tVAR  shift, and go to state 10

    NommerFonction  go to state 11


state 7

    2 Fonctions: CreerTable Fonction . Fonctions

    tINT      reduce using rule 5 (CreerTable)
    $default  reduce using rule 3 (Fonctions)

    Fonctions   go to state 12
    CreerTable  go to state 3


state 8

   12 Main: tMAIN . Block

    tOBRACKET  shift, and go to state 13

    Block  go to state 14


state 9

    1 Start: Fonctions Raz Main .

    $default  reduce using rule 1 (Start)


state 10

   11 NommerFonction: tVAR .

    $default  reduce using rule 11 (NommerFonction)


state 11

    6 Fonction: tINT NommerFonction . tOPAR ArgumentFonction tCPAR Block FinDeFonction

    tOPAR  shift, and go to state 15


state 12

    2 Fonctions: CreerTable Fonction Fonctions .

    $default  reduce using rule 2 (Fonctions)


state 13

   13 Block: tOBRACKET . Declarations Instructions tCBRACKET

    tINT    shift, and go to state 16
    tCONST  shift, and go to state 17

    tINT      [reduce using rule 15 (Declarations)]
    tCONST    [reduce using rule 15 (Declarations)]
    $default  reduce using rule 15 (Declarations)

    Declarations  go to state 18
    Declaration   go to state 19


state 14

   12 Main: tMAIN Block .

    $default  reduce using rule 12 (Main)


state 15

    6 Fonction: tINT NommerFonction tOPAR . ArgumentFonction tCPAR Block FinDeFonction

    tINT    shift, and go to state 20
    tCONST  shift, and go to state 21

    $default  reduce using rule 10 (ArgumentFonction)

    ArgumentFonction  go to state 22


state 16

   17 Declaration: tINT . tVAR tSEMICOLON
   19            | tINT . AssignmentInt tSEMICOLON

    tVAR  shift, and go to state 23

    AssignmentInt  go to state 24


state 17

   16 Declaration: tCONST . tINT tVAR tSEMICOLON
   18            | tCONST . tINT AssignmentConst tSEMICOLON

    tINT  shift, and go to state 25


state 18

   13 Block: tOBRACKET Declarations . Instructions tCBRACKET

    tVAR        shift, and go to state 26
    tNUM        shift, and go to state 27
    tEXPO       shift, and go to state 28
    tOPAR       shift, and go to state 29
    tSEMICOLON  shift, and go to state 30
    tLESS       shift, and go to state 31
    tWHILE      shift, and go to state 32
    tIF         shift, and go to state 33
    tPRINTF     shift, and go to state 34
    tINT        shift, and go to state 16
    tCONST      shift, and go to state 17
    tRETURN     shift, and go to state 35

    $default  reduce using rule 49 (Instructions)

    Declaration    go to state 36
    Instructions   go to state 37
    Instruction    go to state 38
    Operation      go to state 39
    Statement      go to state 40
    Return         go to state 41
    AppelFonction  go to state 42
    While          go to state 43
    BIfElse        go to state 44
    Printf         go to state 45


state 19

   14 Declarations: Declaration . Declarations

    tINT    shift, and go to state 16
    tCONST  shift, and go to state 17

    tINT      [reduce using rule 15 (Declarations)]
    tCONST    [reduce using rule 15 (Declarations)]
    $default  reduce using rule 15 (Declarations)

    Declarations  go to state 46
    Declaration   go to state 19


state 20

    9 ArgumentFonction: tINT . tVAR

    tVAR  shift, and go to state 47


state 21

    8 ArgumentFonction: tCONST . tINT tVAR

    tINT  shift, and go to state 48


state 22

    6 Fonction: tINT NommerFonction tOPAR ArgumentFonction . tCPAR Block FinDeFonction

    tCPAR  shift, and go to state 49


state 23

   17 Declaration: tINT tVAR . tSEMICOLON
   20 AssignmentInt: tVAR . tVIR AssignmentInt
   21              | tVAR . tEQ tVAR tVIR AssignmentInt
   22              | tVAR . tEQ tLESS tVAR tVIR AssignmentInt
   23              | tVAR . tEQ tVAR
   24              | tVAR . tEQ tLESS tVAR
   25              | tVAR . tEQ tNUM tVIR AssignmentInt
   26              | tVAR . tEQ tLESS tNUM tVIR AssignmentInt
   27              | tVAR . tEQ tNUM
   28              | tVAR . tEQ tLESS tNUM
   29              | tVAR . tEQ tEXPO tVIR AssignmentInt
   30              | tVAR . tEQ tLESS tEXPO tVIR AssignmentInt
   31              | tVAR . tEQ tEXPO
   32              | tVAR . tEQ tLESS tEXPO
   33              | tVAR .

    tVIR        shift, and go to state 50
    tSEMICOLON  shift, and go to state 51
    tEQ         shift, and go to state 52

    tSEMICOLON  [reduce using rule 33 (AssignmentInt)]


state 24

   19 Declaration: tINT AssignmentInt . tSEMICOLON

    tSEMICOLON  shift, and go to state 53


state 25

   16 Declaration: tCONST tINT . tVAR tSEMICOLON
   18            | tCONST tINT . AssignmentConst tSEMICOLON

    tVAR  shift, and go to state 54

    AssignmentConst  go to state 55


state 26

   57 Operation: tVAR . tEQ Operation
   60          | tVAR .
   70 AppelFonction: tVAR . tOPAR tCPAR
   71              | tVAR . tOPAR Operation tCPAR

    tOPAR  shift, and go to state 56
    tEQ    shift, and go to state 57

    tOPAR     [reduce using rule 60 (Operation)]
    $default  reduce using rule 60 (Operation)


state 27

   59 Operation: tNUM .

    $default  reduce using rule 59 (Operation)


state 28

   61 Operation: tEXPO .

    $default  reduce using rule 61 (Operation)


state 29

   52 Operation: tOPAR . Operation tCPAR

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 58
    AppelFonction  go to state 42


state 30

   68 Statement: tSEMICOLON .

    $default  reduce using rule 68 (Statement)


state 31

   58 Operation: tLESS . Operation

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 59
    AppelFonction  go to state 42


state 32

   72 While: tWHILE . Nsautw tOPAR Condition tCPAR Instruction
   73      | tWHILE . Nsautw tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET

    $default  reduce using rule 80 (Nsautw)

    Nsautw  go to state 60


state 33

   74 BIfElse: tIF . tOPAR Condition tCPAR Instruction tELSE Nsaut Instruction
   75        | tIF . tOPAR Condition tCPAR Instruction
   76        | tIF . tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET tELSE Nsaut Instruction
   77        | tIF . tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET
   78        | tIF . tOPAR Condition tCPAR Instruction tELSE Nsaut tOBRACKET Instructions tCBRACKET
   79        | tIF . tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET tELSE Nsaut tOBRACKET Instructions tCBRACKET

    tOPAR  shift, and go to state 61


state 34

   89 Printf: tPRINTF . tOPAR Operation tCPAR tSEMICOLON

    tOPAR  shift, and go to state 62


state 35

   69 Return: tRETURN . Operation

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 63
    AppelFonction  go to state 42


state 36

   66 Statement: Declaration .

    $default  reduce using rule 66 (Statement)


state 37

   13 Block: tOBRACKET Declarations Instructions . tCBRACKET

    tCBRACKET  shift, and go to state 64


state 38

   48 Instructions: Instruction . Instructions

    tVAR        shift, and go to state 26
    tNUM        shift, and go to state 27
    tEXPO       shift, and go to state 28
    tOPAR       shift, and go to state 29
    tSEMICOLON  shift, and go to state 30
    tLESS       shift, and go to state 31
    tWHILE      shift, and go to state 32
    tIF         shift, and go to state 33
    tPRINTF     shift, and go to state 34
    tINT        shift, and go to state 16
    tCONST      shift, and go to state 17
    tRETURN     shift, and go to state 35

    $default  reduce using rule 49 (Instructions)

    Declaration    go to state 36
    Instructions   go to state 65
    Instruction    go to state 38
    Operation      go to state 39
    Statement      go to state 40
    Return         go to state 41
    AppelFonction  go to state 42
    While          go to state 43
    BIfElse        go to state 44
    Printf         go to state 45


state 39

   50 Instruction: Operation . tSEMICOLON
   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation

    tSEMICOLON  shift, and go to state 66
    tPLUS       shift, and go to state 67
    tLESS       shift, and go to state 68
    tMUL        shift, and go to state 69
    tDIV        shift, and go to state 70


state 40

   51 Instruction: Statement .

    $default  reduce using rule 51 (Instruction)


state 41

   67 Statement: Return .

    $default  reduce using rule 67 (Statement)


state 42

   62 Operation: AppelFonction .

    $default  reduce using rule 62 (Operation)


state 43

   63 Statement: While .

    $default  reduce using rule 63 (Statement)


state 44

   64 Statement: BIfElse .

    $default  reduce using rule 64 (Statement)


state 45

   65 Statement: Printf .

    $default  reduce using rule 65 (Statement)


state 46

   14 Declarations: Declaration Declarations .

    $default  reduce using rule 14 (Declarations)


state 47

    9 ArgumentFonction: tINT tVAR .

    $default  reduce using rule 9 (ArgumentFonction)


state 48

    8 ArgumentFonction: tCONST tINT . tVAR

    tVAR  shift, and go to state 71


state 49

    6 Fonction: tINT NommerFonction tOPAR ArgumentFonction tCPAR . Block FinDeFonction

    tOBRACKET  shift, and go to state 13

    Block  go to state 72


state 50

   20 AssignmentInt: tVAR tVIR . AssignmentInt

    tVAR  shift, and go to state 73

    AssignmentInt  go to state 74


state 51

   17 Declaration: tINT tVAR tSEMICOLON .

    $default  reduce using rule 17 (Declaration)


state 52

   21 AssignmentInt: tVAR tEQ . tVAR tVIR AssignmentInt
   22              | tVAR tEQ . tLESS tVAR tVIR AssignmentInt
   23              | tVAR tEQ . tVAR
   24              | tVAR tEQ . tLESS tVAR
   25              | tVAR tEQ . tNUM tVIR AssignmentInt
   26              | tVAR tEQ . tLESS tNUM tVIR AssignmentInt
   27              | tVAR tEQ . tNUM
   28              | tVAR tEQ . tLESS tNUM
   29              | tVAR tEQ . tEXPO tVIR AssignmentInt
   30              | tVAR tEQ . tLESS tEXPO tVIR AssignmentInt
   31              | tVAR tEQ . tEXPO
   32              | tVAR tEQ . tLESS tEXPO

    tVAR   shift, and go to state 75
    tNUM   shift, and go to state 76
    tEXPO  shift, and go to state 77
    tLESS  shift, and go to state 78


state 53

   19 Declaration: tINT AssignmentInt tSEMICOLON .

    $default  reduce using rule 19 (Declaration)


state 54

   16 Declaration: tCONST tINT tVAR . tSEMICOLON
   34 AssignmentConst: tVAR . tVIR AssignmentConst
   35                | tVAR . tEQ tVAR tVIR AssignmentConst
   36                | tVAR . tEQ tLESS tVAR tVIR AssignmentConst
   37                | tVAR . tEQ tVAR
   38                | tVAR . tEQ tLESS tVAR
   39                | tVAR . tEQ tNUM tVIR AssignmentConst
   40                | tVAR . tEQ tLESS tNUM tVIR AssignmentConst
   41                | tVAR . tEQ tNUM
   42                | tVAR . tEQ tLESS tNUM
   43                | tVAR . tEQ tEXPO tVIR AssignmentConst
   44                | tVAR . tEQ tLESS tEXPO tVIR AssignmentConst
   45                | tVAR . tEQ tEXPO
   46                | tVAR . tEQ tLESS tEXPO
   47                | tVAR .

    tVIR        shift, and go to state 79
    tSEMICOLON  shift, and go to state 80
    tEQ         shift, and go to state 81

    tSEMICOLON  [reduce using rule 47 (AssignmentConst)]


state 55

   18 Declaration: tCONST tINT AssignmentConst . tSEMICOLON

    tSEMICOLON  shift, and go to state 82


state 56

   70 AppelFonction: tVAR tOPAR . tCPAR
   71              | tVAR tOPAR . Operation tCPAR

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tCPAR  shift, and go to state 83
    tLESS  shift, and go to state 31

    Operation      go to state 84
    AppelFonction  go to state 42


state 57

   57 Operation: tVAR tEQ . Operation

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 85
    AppelFonction  go to state 42


state 58

   52 Operation: tOPAR Operation . tCPAR
   53          | Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation

    tCPAR  shift, and go to state 86
    tPLUS  shift, and go to state 67
    tLESS  shift, and go to state 68
    tMUL   shift, and go to state 69
    tDIV   shift, and go to state 70


state 59

   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation
   58          | tLESS Operation .

    tMUL  shift, and go to state 69
    tDIV  shift, and go to state 70

    $default  reduce using rule 58 (Operation)


state 60

   72 While: tWHILE Nsautw . tOPAR Condition tCPAR Instruction
   73      | tWHILE Nsautw . tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET

    tOPAR  shift, and go to state 87


state 61

   74 BIfElse: tIF tOPAR . Condition tCPAR Instruction tELSE Nsaut Instruction
   75        | tIF tOPAR . Condition tCPAR Instruction
   76        | tIF tOPAR . Condition tCPAR tOBRACKET Instructions tCBRACKET tELSE Nsaut Instruction
   77        | tIF tOPAR . Condition tCPAR tOBRACKET Instructions tCBRACKET
   78        | tIF tOPAR . Condition tCPAR Instruction tELSE Nsaut tOBRACKET Instructions tCBRACKET
   79        | tIF tOPAR . Condition tCPAR tOBRACKET Instructions tCBRACKET tELSE Nsaut tOBRACKET Instructions tCBRACKET

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 88
    AppelFonction  go to state 42
    Condition      go to state 89


state 62

   89 Printf: tPRINTF tOPAR . Operation tCPAR tSEMICOLON

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 90
    AppelFonction  go to state 42


state 63

   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation
   69 Return: tRETURN Operation .

    tPLUS  shift, and go to state 67
    tLESS  shift, and go to state 68
    tMUL   shift, and go to state 69
    tDIV   shift, and go to state 70

    tLESS     [reduce using rule 69 (Return)]
    $default  reduce using rule 69 (Return)


state 64

   13 Block: tOBRACKET Declarations Instructions tCBRACKET .

    $default  reduce using rule 13 (Block)


state 65

   48 Instructions: Instruction Instructions .

    $default  reduce using rule 48 (Instructions)


state 66

   50 Instruction: Operation tSEMICOLON .

    $default  reduce using rule 50 (Instruction)


state 67

   53 Operation: Operation tPLUS . Operation

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 91
    AppelFonction  go to state 42


state 68

   54 Operation: Operation tLESS . Operation

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 92
    AppelFonction  go to state 42


state 69

   55 Operation: Operation tMUL . Operation

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 93
    AppelFonction  go to state 42


state 70

   56 Operation: Operation tDIV . Operation

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 94
    AppelFonction  go to state 42


state 71

    8 ArgumentFonction: tCONST tINT tVAR .

    $default  reduce using rule 8 (ArgumentFonction)


state 72

    6 Fonction: tINT NommerFonction tOPAR ArgumentFonction tCPAR Block . FinDeFonction

    $default  reduce using rule 7 (FinDeFonction)

    FinDeFonction  go to state 95


state 73

   20 AssignmentInt: tVAR . tVIR AssignmentInt
   21              | tVAR . tEQ tVAR tVIR AssignmentInt
   22              | tVAR . tEQ tLESS tVAR tVIR AssignmentInt
   23              | tVAR . tEQ tVAR
   24              | tVAR . tEQ tLESS tVAR
   25              | tVAR . tEQ tNUM tVIR AssignmentInt
   26              | tVAR . tEQ tLESS tNUM tVIR AssignmentInt
   27              | tVAR . tEQ tNUM
   28              | tVAR . tEQ tLESS tNUM
   29              | tVAR . tEQ tEXPO tVIR AssignmentInt
   30              | tVAR . tEQ tLESS tEXPO tVIR AssignmentInt
   31              | tVAR . tEQ tEXPO
   32              | tVAR . tEQ tLESS tEXPO
   33              | tVAR .

    tVIR  shift, and go to state 50
    tEQ   shift, and go to state 52

    $default  reduce using rule 33 (AssignmentInt)


state 74

   20 AssignmentInt: tVAR tVIR AssignmentInt .

    $default  reduce using rule 20 (AssignmentInt)


state 75

   21 AssignmentInt: tVAR tEQ tVAR . tVIR AssignmentInt
   23              | tVAR tEQ tVAR .

    tVIR  shift, and go to state 96

    $default  reduce using rule 23 (AssignmentInt)


state 76

   25 AssignmentInt: tVAR tEQ tNUM . tVIR AssignmentInt
   27              | tVAR tEQ tNUM .

    tVIR  shift, and go to state 97

    $default  reduce using rule 27 (AssignmentInt)


state 77

   29 AssignmentInt: tVAR tEQ tEXPO . tVIR AssignmentInt
   31              | tVAR tEQ tEXPO .

    tVIR  shift, and go to state 98

    $default  reduce using rule 31 (AssignmentInt)


state 78

   22 AssignmentInt: tVAR tEQ tLESS . tVAR tVIR AssignmentInt
   24              | tVAR tEQ tLESS . tVAR
   26              | tVAR tEQ tLESS . tNUM tVIR AssignmentInt
   28              | tVAR tEQ tLESS . tNUM
   30              | tVAR tEQ tLESS . tEXPO tVIR AssignmentInt
   32              | tVAR tEQ tLESS . tEXPO

    tVAR   shift, and go to state 99
    tNUM   shift, and go to state 100
    tEXPO  shift, and go to state 101


state 79

   34 AssignmentConst: tVAR tVIR . AssignmentConst

    tVAR  shift, and go to state 102

    AssignmentConst  go to state 103


state 80

   16 Declaration: tCONST tINT tVAR tSEMICOLON .

    $default  reduce using rule 16 (Declaration)


state 81

   35 AssignmentConst: tVAR tEQ . tVAR tVIR AssignmentConst
   36                | tVAR tEQ . tLESS tVAR tVIR AssignmentConst
   37                | tVAR tEQ . tVAR
   38                | tVAR tEQ . tLESS tVAR
   39                | tVAR tEQ . tNUM tVIR AssignmentConst
   40                | tVAR tEQ . tLESS tNUM tVIR AssignmentConst
   41                | tVAR tEQ . tNUM
   42                | tVAR tEQ . tLESS tNUM
   43                | tVAR tEQ . tEXPO tVIR AssignmentConst
   44                | tVAR tEQ . tLESS tEXPO tVIR AssignmentConst
   45                | tVAR tEQ . tEXPO
   46                | tVAR tEQ . tLESS tEXPO

    tVAR   shift, and go to state 104
    tNUM   shift, and go to state 105
    tEXPO  shift, and go to state 106
    tLESS  shift, and go to state 107


state 82

   18 Declaration: tCONST tINT AssignmentConst tSEMICOLON .

    $default  reduce using rule 18 (Declaration)


state 83

   70 AppelFonction: tVAR tOPAR tCPAR .

    $default  reduce using rule 70 (AppelFonction)


state 84

   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation
   71 AppelFonction: tVAR tOPAR Operation . tCPAR

    tCPAR  shift, and go to state 108
    tPLUS  shift, and go to state 67
    tLESS  shift, and go to state 68
    tMUL   shift, and go to state 69
    tDIV   shift, and go to state 70


state 85

   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation
   57          | tVAR tEQ Operation .

    tPLUS  shift, and go to state 67
    tLESS  shift, and go to state 68
    tMUL   shift, and go to state 69
    tDIV   shift, and go to state 70

    $default  reduce using rule 57 (Operation)


state 86

   52 Operation: tOPAR Operation tCPAR .

    $default  reduce using rule 52 (Operation)


state 87

   72 While: tWHILE Nsautw tOPAR . Condition tCPAR Instruction
   73      | tWHILE Nsautw tOPAR . Condition tCPAR tOBRACKET Instructions tCBRACKET

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 88
    AppelFonction  go to state 42
    Condition      go to state 109


state 88

   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation
   82 Condition: Operation . tEQUAL Operation
   83          | Operation . tNE Operation
   84          | Operation . tLE Operation
   85          | Operation . tLT Operation
   86          | Operation . tGE Operation
   87          | Operation . tGT Operation
   88          | Operation .

    tLE     shift, and go to state 110
    tLT     shift, and go to state 111
    tGE     shift, and go to state 112
    tGT     shift, and go to state 113
    tNE     shift, and go to state 114
    tEQUAL  shift, and go to state 115
    tPLUS   shift, and go to state 67
    tLESS   shift, and go to state 68
    tMUL    shift, and go to state 69
    tDIV    shift, and go to state 70

    $default  reduce using rule 88 (Condition)


state 89

   74 BIfElse: tIF tOPAR Condition . tCPAR Instruction tELSE Nsaut Instruction
   75        | tIF tOPAR Condition . tCPAR Instruction
   76        | tIF tOPAR Condition . tCPAR tOBRACKET Instructions tCBRACKET tELSE Nsaut Instruction
   77        | tIF tOPAR Condition . tCPAR tOBRACKET Instructions tCBRACKET
   78        | tIF tOPAR Condition . tCPAR Instruction tELSE Nsaut tOBRACKET Instructions tCBRACKET
   79        | tIF tOPAR Condition . tCPAR tOBRACKET Instructions tCBRACKET tELSE Nsaut tOBRACKET Instructions tCBRACKET

    tCPAR  shift, and go to state 116


state 90

   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation
   89 Printf: tPRINTF tOPAR Operation . tCPAR tSEMICOLON

    tCPAR  shift, and go to state 117
    tPLUS  shift, and go to state 67
    tLESS  shift, and go to state 68
    tMUL   shift, and go to state 69
    tDIV   shift, and go to state 70


state 91

   53 Operation: Operation . tPLUS Operation
   53          | Operation tPLUS Operation .
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation

    tMUL  shift, and go to state 69
    tDIV  shift, and go to state 70

    $default  reduce using rule 53 (Operation)


state 92

   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   54          | Operation tLESS Operation .
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation

    tMUL  shift, and go to state 69
    tDIV  shift, and go to state 70

    $default  reduce using rule 54 (Operation)


state 93

   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   55          | Operation tMUL Operation .
   56          | Operation . tDIV Operation

    $default  reduce using rule 55 (Operation)


state 94

   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation
   56          | Operation tDIV Operation .

    $default  reduce using rule 56 (Operation)


state 95

    6 Fonction: tINT NommerFonction tOPAR ArgumentFonction tCPAR Block FinDeFonction .

    $default  reduce using rule 6 (Fonction)


state 96

   21 AssignmentInt: tVAR tEQ tVAR tVIR . AssignmentInt

    tVAR  shift, and go to state 73

    AssignmentInt  go to state 118


state 97

   25 AssignmentInt: tVAR tEQ tNUM tVIR . AssignmentInt

    tVAR  shift, and go to state 73

    AssignmentInt  go to state 119


state 98

   29 AssignmentInt: tVAR tEQ tEXPO tVIR . AssignmentInt

    tVAR  shift, and go to state 73

    AssignmentInt  go to state 120


state 99

   22 AssignmentInt: tVAR tEQ tLESS tVAR . tVIR AssignmentInt
   24              | tVAR tEQ tLESS tVAR .

    tVIR  shift, and go to state 121

    $default  reduce using rule 24 (AssignmentInt)


state 100

   26 AssignmentInt: tVAR tEQ tLESS tNUM . tVIR AssignmentInt
   28              | tVAR tEQ tLESS tNUM .

    tVIR  shift, and go to state 122

    $default  reduce using rule 28 (AssignmentInt)


state 101

   30 AssignmentInt: tVAR tEQ tLESS tEXPO . tVIR AssignmentInt
   32              | tVAR tEQ tLESS tEXPO .

    tVIR  shift, and go to state 123

    $default  reduce using rule 32 (AssignmentInt)


state 102

   34 AssignmentConst: tVAR . tVIR AssignmentConst
   35                | tVAR . tEQ tVAR tVIR AssignmentConst
   36                | tVAR . tEQ tLESS tVAR tVIR AssignmentConst
   37                | tVAR . tEQ tVAR
   38                | tVAR . tEQ tLESS tVAR
   39                | tVAR . tEQ tNUM tVIR AssignmentConst
   40                | tVAR . tEQ tLESS tNUM tVIR AssignmentConst
   41                | tVAR . tEQ tNUM
   42                | tVAR . tEQ tLESS tNUM
   43                | tVAR . tEQ tEXPO tVIR AssignmentConst
   44                | tVAR . tEQ tLESS tEXPO tVIR AssignmentConst
   45                | tVAR . tEQ tEXPO
   46                | tVAR . tEQ tLESS tEXPO
   47                | tVAR .

    tVIR  shift, and go to state 79
    tEQ   shift, and go to state 81

    $default  reduce using rule 47 (AssignmentConst)


state 103

   34 AssignmentConst: tVAR tVIR AssignmentConst .

    $default  reduce using rule 34 (AssignmentConst)


state 104

   35 AssignmentConst: tVAR tEQ tVAR . tVIR AssignmentConst
   37                | tVAR tEQ tVAR .

    tVIR  shift, and go to state 124

    $default  reduce using rule 37 (AssignmentConst)


state 105

   39 AssignmentConst: tVAR tEQ tNUM . tVIR AssignmentConst
   41                | tVAR tEQ tNUM .

    tVIR  shift, and go to state 125

    $default  reduce using rule 41 (AssignmentConst)


state 106

   43 AssignmentConst: tVAR tEQ tEXPO . tVIR AssignmentConst
   45                | tVAR tEQ tEXPO .

    tVIR  shift, and go to state 126

    $default  reduce using rule 45 (AssignmentConst)


state 107

   36 AssignmentConst: tVAR tEQ tLESS . tVAR tVIR AssignmentConst
   38                | tVAR tEQ tLESS . tVAR
   40                | tVAR tEQ tLESS . tNUM tVIR AssignmentConst
   42                | tVAR tEQ tLESS . tNUM
   44                | tVAR tEQ tLESS . tEXPO tVIR AssignmentConst
   46                | tVAR tEQ tLESS . tEXPO

    tVAR   shift, and go to state 127
    tNUM   shift, and go to state 128
    tEXPO  shift, and go to state 129


state 108

   71 AppelFonction: tVAR tOPAR Operation tCPAR .

    $default  reduce using rule 71 (AppelFonction)


state 109

   72 While: tWHILE Nsautw tOPAR Condition . tCPAR Instruction
   73      | tWHILE Nsautw tOPAR Condition . tCPAR tOBRACKET Instructions tCBRACKET

    tCPAR  shift, and go to state 130


state 110

   84 Condition: Operation tLE . Operation

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 131
    AppelFonction  go to state 42


state 111

   85 Condition: Operation tLT . Operation

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 132
    AppelFonction  go to state 42


state 112

   86 Condition: Operation tGE . Operation

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 133
    AppelFonction  go to state 42


state 113

   87 Condition: Operation tGT . Operation

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 134
    AppelFonction  go to state 42


state 114

   83 Condition: Operation tNE . Operation

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 135
    AppelFonction  go to state 42


state 115

   82 Condition: Operation tEQUAL . Operation

    tVAR   shift, and go to state 26
    tNUM   shift, and go to state 27
    tEXPO  shift, and go to state 28
    tOPAR  shift, and go to state 29
    tLESS  shift, and go to state 31

    Operation      go to state 136
    AppelFonction  go to state 42


state 116

   74 BIfElse: tIF tOPAR Condition tCPAR . Instruction tELSE Nsaut Instruction
   75        | tIF tOPAR Condition tCPAR . Instruction
   76        | tIF tOPAR Condition tCPAR . tOBRACKET Instructions tCBRACKET tELSE Nsaut Instruction
   77        | tIF tOPAR Condition tCPAR . tOBRACKET Instructions tCBRACKET
   78        | tIF tOPAR Condition tCPAR . Instruction tELSE Nsaut tOBRACKET Instructions tCBRACKET
   79        | tIF tOPAR Condition tCPAR . tOBRACKET Instructions tCBRACKET tELSE Nsaut tOBRACKET Instructions tCBRACKET

    tVAR        shift, and go to state 26
    tNUM        shift, and go to state 27
    tEXPO       shift, and go to state 28
    tOPAR       shift, and go to state 29
    tSEMICOLON  shift, and go to state 30
    tLESS       shift, and go to state 31
    tWHILE      shift, and go to state 32
    tIF         shift, and go to state 33
    tPRINTF     shift, and go to state 34
    tOBRACKET   shift, and go to state 137
    tINT        shift, and go to state 16
    tCONST      shift, and go to state 17
    tRETURN     shift, and go to state 35

    Declaration    go to state 36
    Instruction    go to state 138
    Operation      go to state 39
    Statement      go to state 40
    Return         go to state 41
    AppelFonction  go to state 42
    While          go to state 43
    BIfElse        go to state 44
    Printf         go to state 45


state 117

   89 Printf: tPRINTF tOPAR Operation tCPAR . tSEMICOLON

    tSEMICOLON  shift, and go to state 139


state 118

   21 AssignmentInt: tVAR tEQ tVAR tVIR AssignmentInt .

    $default  reduce using rule 21 (AssignmentInt)


state 119

   25 AssignmentInt: tVAR tEQ tNUM tVIR AssignmentInt .

    $default  reduce using rule 25 (AssignmentInt)


state 120

   29 AssignmentInt: tVAR tEQ tEXPO tVIR AssignmentInt .

    $default  reduce using rule 29 (AssignmentInt)


state 121

   22 AssignmentInt: tVAR tEQ tLESS tVAR tVIR . AssignmentInt

    tVAR  shift, and go to state 73

    AssignmentInt  go to state 140


state 122

   26 AssignmentInt: tVAR tEQ tLESS tNUM tVIR . AssignmentInt

    tVAR  shift, and go to state 73

    AssignmentInt  go to state 141


state 123

   30 AssignmentInt: tVAR tEQ tLESS tEXPO tVIR . AssignmentInt

    tVAR  shift, and go to state 73

    AssignmentInt  go to state 142


state 124

   35 AssignmentConst: tVAR tEQ tVAR tVIR . AssignmentConst

    tVAR  shift, and go to state 102

    AssignmentConst  go to state 143


state 125

   39 AssignmentConst: tVAR tEQ tNUM tVIR . AssignmentConst

    tVAR  shift, and go to state 102

    AssignmentConst  go to state 144


state 126

   43 AssignmentConst: tVAR tEQ tEXPO tVIR . AssignmentConst

    tVAR  shift, and go to state 102

    AssignmentConst  go to state 145


state 127

   36 AssignmentConst: tVAR tEQ tLESS tVAR . tVIR AssignmentConst
   38                | tVAR tEQ tLESS tVAR .

    tVIR  shift, and go to state 146

    $default  reduce using rule 38 (AssignmentConst)


state 128

   40 AssignmentConst: tVAR tEQ tLESS tNUM . tVIR AssignmentConst
   42                | tVAR tEQ tLESS tNUM .

    tVIR  shift, and go to state 147

    $default  reduce using rule 42 (AssignmentConst)


state 129

   44 AssignmentConst: tVAR tEQ tLESS tEXPO . tVIR AssignmentConst
   46                | tVAR tEQ tLESS tEXPO .

    tVIR  shift, and go to state 148

    $default  reduce using rule 46 (AssignmentConst)


state 130

   72 While: tWHILE Nsautw tOPAR Condition tCPAR . Instruction
   73      | tWHILE Nsautw tOPAR Condition tCPAR . tOBRACKET Instructions tCBRACKET

    tVAR        shift, and go to state 26
    tNUM        shift, and go to state 27
    tEXPO       shift, and go to state 28
    tOPAR       shift, and go to state 29
    tSEMICOLON  shift, and go to state 30
    tLESS       shift, and go to state 31
    tWHILE      shift, and go to state 32
    tIF         shift, and go to state 33
    tPRINTF     shift, and go to state 34
    tOBRACKET   shift, and go to state 149
    tINT        shift, and go to state 16
    tCONST      shift, and go to state 17
    tRETURN     shift, and go to state 35

    Declaration    go to state 36
    Instruction    go to state 150
    Operation      go to state 39
    Statement      go to state 40
    Return         go to state 41
    AppelFonction  go to state 42
    While          go to state 43
    BIfElse        go to state 44
    Printf         go to state 45


state 131

   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation
   84 Condition: Operation tLE Operation .

    tPLUS  shift, and go to state 67
    tLESS  shift, and go to state 68
    tMUL   shift, and go to state 69
    tDIV   shift, and go to state 70

    $default  reduce using rule 84 (Condition)


state 132

   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation
   85 Condition: Operation tLT Operation .

    tPLUS  shift, and go to state 67
    tLESS  shift, and go to state 68
    tMUL   shift, and go to state 69
    tDIV   shift, and go to state 70

    $default  reduce using rule 85 (Condition)


state 133

   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation
   86 Condition: Operation tGE Operation .

    tPLUS  shift, and go to state 67
    tLESS  shift, and go to state 68
    tMUL   shift, and go to state 69
    tDIV   shift, and go to state 70

    $default  reduce using rule 86 (Condition)


state 134

   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation
   87 Condition: Operation tGT Operation .

    tPLUS  shift, and go to state 67
    tLESS  shift, and go to state 68
    tMUL   shift, and go to state 69
    tDIV   shift, and go to state 70

    $default  reduce using rule 87 (Condition)


state 135

   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation
   83 Condition: Operation tNE Operation .

    tPLUS  shift, and go to state 67
    tLESS  shift, and go to state 68
    tMUL   shift, and go to state 69
    tDIV   shift, and go to state 70

    $default  reduce using rule 83 (Condition)


state 136

   53 Operation: Operation . tPLUS Operation
   54          | Operation . tLESS Operation
   55          | Operation . tMUL Operation
   56          | Operation . tDIV Operation
   82 Condition: Operation tEQUAL Operation .

    tPLUS  shift, and go to state 67
    tLESS  shift, and go to state 68
    tMUL   shift, and go to state 69
    tDIV   shift, and go to state 70

    $default  reduce using rule 82 (Condition)


state 137

   76 BIfElse: tIF tOPAR Condition tCPAR tOBRACKET . Instructions tCBRACKET tELSE Nsaut Instruction
   77        | tIF tOPAR Condition tCPAR tOBRACKET . Instructions tCBRACKET
   79        | tIF tOPAR Condition tCPAR tOBRACKET . Instructions tCBRACKET tELSE Nsaut tOBRACKET Instructions tCBRACKET

    tVAR        shift, and go to state 26
    tNUM        shift, and go to state 27
    tEXPO       shift, and go to state 28
    tOPAR       shift, and go to state 29
    tSEMICOLON  shift, and go to state 30
    tLESS       shift, and go to state 31
    tWHILE      shift, and go to state 32
    tIF         shift, and go to state 33
    tPRINTF     shift, and go to state 34
    tINT        shift, and go to state 16
    tCONST      shift, and go to state 17
    tRETURN     shift, and go to state 35

    $default  reduce using rule 49 (Instructions)

    Declaration    go to state 36
    Instructions   go to state 151
    Instruction    go to state 38
    Operation      go to state 39
    Statement      go to state 40
    Return         go to state 41
    AppelFonction  go to state 42
    While          go to state 43
    BIfElse        go to state 44
    Printf         go to state 45


state 138

   74 BIfElse: tIF tOPAR Condition tCPAR Instruction . tELSE Nsaut Instruction
   75        | tIF tOPAR Condition tCPAR Instruction .
   78        | tIF tOPAR Condition tCPAR Instruction . tELSE Nsaut tOBRACKET Instructions tCBRACKET

    tELSE  shift, and go to state 152

    tELSE     [reduce using rule 75 (BIfElse)]
    $default  reduce using rule 75 (BIfElse)


state 139

   89 Printf: tPRINTF tOPAR Operation tCPAR tSEMICOLON .

    $default  reduce using rule 89 (Printf)


state 140

   22 AssignmentInt: tVAR tEQ tLESS tVAR tVIR AssignmentInt .

    $default  reduce using rule 22 (AssignmentInt)


state 141

   26 AssignmentInt: tVAR tEQ tLESS tNUM tVIR AssignmentInt .

    $default  reduce using rule 26 (AssignmentInt)


state 142

   30 AssignmentInt: tVAR tEQ tLESS tEXPO tVIR AssignmentInt .

    $default  reduce using rule 30 (AssignmentInt)


state 143

   35 AssignmentConst: tVAR tEQ tVAR tVIR AssignmentConst .

    $default  reduce using rule 35 (AssignmentConst)


state 144

   39 AssignmentConst: tVAR tEQ tNUM tVIR AssignmentConst .

    $default  reduce using rule 39 (AssignmentConst)


state 145

   43 AssignmentConst: tVAR tEQ tEXPO tVIR AssignmentConst .

    $default  reduce using rule 43 (AssignmentConst)


state 146

   36 AssignmentConst: tVAR tEQ tLESS tVAR tVIR . AssignmentConst

    tVAR  shift, and go to state 102

    AssignmentConst  go to state 153


state 147

   40 AssignmentConst: tVAR tEQ tLESS tNUM tVIR . AssignmentConst

    tVAR  shift, and go to state 102

    AssignmentConst  go to state 154


state 148

   44 AssignmentConst: tVAR tEQ tLESS tEXPO tVIR . AssignmentConst

    tVAR  shift, and go to state 102

    AssignmentConst  go to state 155


state 149

   73 While: tWHILE Nsautw tOPAR Condition tCPAR tOBRACKET . Instructions tCBRACKET

    tVAR        shift, and go to state 26
    tNUM        shift, and go to state 27
    tEXPO       shift, and go to state 28
    tOPAR       shift, and go to state 29
    tSEMICOLON  shift, and go to state 30
    tLESS       shift, and go to state 31
    tWHILE      shift, and go to state 32
    tIF         shift, and go to state 33
    tPRINTF     shift, and go to state 34
    tINT        shift, and go to state 16
    tCONST      shift, and go to state 17
    tRETURN     shift, and go to state 35

    $default  reduce using rule 49 (Instructions)

    Declaration    go to state 36
    Instructions   go to state 156
    Instruction    go to state 38
    Operation      go to state 39
    Statement      go to state 40
    Return         go to state 41
    AppelFonction  go to state 42
    While          go to state 43
    BIfElse        go to state 44
    Printf         go to state 45


state 150

   72 While: tWHILE Nsautw tOPAR Condition tCPAR Instruction .

    $default  reduce using rule 72 (While)


state 151

   76 BIfElse: tIF tOPAR Condition tCPAR tOBRACKET Instructions . tCBRACKET tELSE Nsaut Instruction
   77        | tIF tOPAR Condition tCPAR tOBRACKET Instructions . tCBRACKET
   79        | tIF tOPAR Condition tCPAR tOBRACKET Instructions . tCBRACKET tELSE Nsaut tOBRACKET Instructions tCBRACKET

    tCBRACKET  shift, and go to state 157


state 152

   74 BIfElse: tIF tOPAR Condition tCPAR Instruction tELSE . Nsaut Instruction
   78        | tIF tOPAR Condition tCPAR Instruction tELSE . Nsaut tOBRACKET Instructions tCBRACKET

    $default  reduce using rule 81 (Nsaut)

    Nsaut  go to state 158


state 153

   36 AssignmentConst: tVAR tEQ tLESS tVAR tVIR AssignmentConst .

    $default  reduce using rule 36 (AssignmentConst)


state 154

   40 AssignmentConst: tVAR tEQ tLESS tNUM tVIR AssignmentConst .

    $default  reduce using rule 40 (AssignmentConst)


state 155

   44 AssignmentConst: tVAR tEQ tLESS tEXPO tVIR AssignmentConst .

    $default  reduce using rule 44 (AssignmentConst)


state 156

   73 While: tWHILE Nsautw tOPAR Condition tCPAR tOBRACKET Instructions . tCBRACKET

    tCBRACKET  shift, and go to state 159


state 157

   76 BIfElse: tIF tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET . tELSE Nsaut Instruction
   77        | tIF tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET .
   79        | tIF tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET . tELSE Nsaut tOBRACKET Instructions tCBRACKET

    tELSE  shift, and go to state 160

    tELSE     [reduce using rule 77 (BIfElse)]
    $default  reduce using rule 77 (BIfElse)


state 158

   74 BIfElse: tIF tOPAR Condition tCPAR Instruction tELSE Nsaut . Instruction
   78        | tIF tOPAR Condition tCPAR Instruction tELSE Nsaut . tOBRACKET Instructions tCBRACKET

    tVAR        shift, and go to state 26
    tNUM        shift, and go to state 27
    tEXPO       shift, and go to state 28
    tOPAR       shift, and go to state 29
    tSEMICOLON  shift, and go to state 30
    tLESS       shift, and go to state 31
    tWHILE      shift, and go to state 32
    tIF         shift, and go to state 33
    tPRINTF     shift, and go to state 34
    tOBRACKET   shift, and go to state 161
    tINT        shift, and go to state 16
    tCONST      shift, and go to state 17
    tRETURN     shift, and go to state 35

    Declaration    go to state 36
    Instruction    go to state 162
    Operation      go to state 39
    Statement      go to state 40
    Return         go to state 41
    AppelFonction  go to state 42
    While          go to state 43
    BIfElse        go to state 44
    Printf         go to state 45


state 159

   73 While: tWHILE Nsautw tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET .

    $default  reduce using rule 73 (While)


state 160

   76 BIfElse: tIF tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET tELSE . Nsaut Instruction
   79        | tIF tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET tELSE . Nsaut tOBRACKET Instructions tCBRACKET

    $default  reduce using rule 81 (Nsaut)

    Nsaut  go to state 163


state 161

   78 BIfElse: tIF tOPAR Condition tCPAR Instruction tELSE Nsaut tOBRACKET . Instructions tCBRACKET

    tVAR        shift, and go to state 26
    tNUM        shift, and go to state 27
    tEXPO       shift, and go to state 28
    tOPAR       shift, and go to state 29
    tSEMICOLON  shift, and go to state 30
    tLESS       shift, and go to state 31
    tWHILE      shift, and go to state 32
    tIF         shift, and go to state 33
    tPRINTF     shift, and go to state 34
    tINT        shift, and go to state 16
    tCONST      shift, and go to state 17
    tRETURN     shift, and go to state 35

    $default  reduce using rule 49 (Instructions)

    Declaration    go to state 36
    Instructions   go to state 164
    Instruction    go to state 38
    Operation      go to state 39
    Statement      go to state 40
    Return         go to state 41
    AppelFonction  go to state 42
    While          go to state 43
    BIfElse        go to state 44
    Printf         go to state 45


state 162

   74 BIfElse: tIF tOPAR Condition tCPAR Instruction tELSE Nsaut Instruction .

    $default  reduce using rule 74 (BIfElse)


state 163

   76 BIfElse: tIF tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET tELSE Nsaut . Instruction
   79        | tIF tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET tELSE Nsaut . tOBRACKET Instructions tCBRACKET

    tVAR        shift, and go to state 26
    tNUM        shift, and go to state 27
    tEXPO       shift, and go to state 28
    tOPAR       shift, and go to state 29
    tSEMICOLON  shift, and go to state 30
    tLESS       shift, and go to state 31
    tWHILE      shift, and go to state 32
    tIF         shift, and go to state 33
    tPRINTF     shift, and go to state 34
    tOBRACKET   shift, and go to state 165
    tINT        shift, and go to state 16
    tCONST      shift, and go to state 17
    tRETURN     shift, and go to state 35

    Declaration    go to state 36
    Instruction    go to state 166
    Operation      go to state 39
    Statement      go to state 40
    Return         go to state 41
    AppelFonction  go to state 42
    While          go to state 43
    BIfElse        go to state 44
    Printf         go to state 45


state 164

   78 BIfElse: tIF tOPAR Condition tCPAR Instruction tELSE Nsaut tOBRACKET Instructions . tCBRACKET

    tCBRACKET  shift, and go to state 167


state 165

   79 BIfElse: tIF tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET tELSE Nsaut tOBRACKET . Instructions tCBRACKET

    tVAR        shift, and go to state 26
    tNUM        shift, and go to state 27
    tEXPO       shift, and go to state 28
    tOPAR       shift, and go to state 29
    tSEMICOLON  shift, and go to state 30
    tLESS       shift, and go to state 31
    tWHILE      shift, and go to state 32
    tIF         shift, and go to state 33
    tPRINTF     shift, and go to state 34
    tINT        shift, and go to state 16
    tCONST      shift, and go to state 17
    tRETURN     shift, and go to state 35

    $default  reduce using rule 49 (Instructions)

    Declaration    go to state 36
    Instructions   go to state 168
    Instruction    go to state 38
    Operation      go to state 39
    Statement      go to state 40
    Return         go to state 41
    AppelFonction  go to state 42
    While          go to state 43
    BIfElse        go to state 44
    Printf         go to state 45


state 166

   76 BIfElse: tIF tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET tELSE Nsaut Instruction .

    $default  reduce using rule 76 (BIfElse)


state 167

   78 BIfElse: tIF tOPAR Condition tCPAR Instruction tELSE Nsaut tOBRACKET Instructions tCBRACKET .

    $default  reduce using rule 78 (BIfElse)


state 168

   79 BIfElse: tIF tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET tELSE Nsaut tOBRACKET Instructions . tCBRACKET

    tCBRACKET  shift, and go to state 169


state 169

   79 BIfElse: tIF tOPAR Condition tCPAR tOBRACKET Instructions tCBRACKET tELSE Nsaut tOBRACKET Instructions tCBRACKET .

    $default  reduce using rule 79 (BIfElse)
